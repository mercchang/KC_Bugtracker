@model IEnumerable<KC_Bugtracker.Models.TicketNotification>
@using Microsoft.AspNet.Identity
@using KC_Bugtracker.Models
@using KC_Bugtracker.Helpers

@{
    ViewBag.Title = "Notifications";
}

@{
    var db = new ApplicationDbContext();
    var user = db.Users.Find(User.Identity.GetUserId());
    var roleHelper = new UserRolesHelper();

}
<div class="notification-content">
    <div class="myNot card shadow" id="myNotDiv">
        <div class="card-header">
            <div class="row">
                <div class="col">
                    <h3>My Notifications</h3>
                </div>
                @if (roleHelper.GetRoleName(user.Id) == "Administrator")
                {
                    <div class="col text-right">
                        <button type="button" class="btn btn-info" id="allNot" data-toggle="2">All Notifications</button>
                    </div>
                }
            </div>
        </div>

        <div class="card-body">
            <div class="table-responsive">
                <table id="myNotifications" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>
                                From
                            </th>
                            @if (User.IsInRole("Admin"))
                            {
                                <th>
                                    To
                                </th>
                            }
                            <th>
                                @Html.DisplayNameFor(model => model.TicketId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.NotificationBody)
                            </th>
                            <th>
                                Created
                            </th>
                            <th>
                                Notification Read
                            </th>
                            <th></th>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Where(u => u.RecipientId == user.Id))
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Sender.FullName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Recipient.FullName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TicketId)
                                </td>
                                <td>
                                    @Html.Raw(item.NotificationBody)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => item.Created)
                                </td>
                                <td>
                                    @if (item.IsRead == true)
                                    {
                                        <span class="badge badge-pill badge-success">Read</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-pill badge-danger">Not Read</span>
                                    }
                                </td>
                                <td>
                                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        
    </div>
    <div class="allNot card shadow" id="allNotDiv">
        <div class="card-header">
            <div class="row">
                <div class="col">
                    <h3>All Notifications</h3>
                </div>
                @if (roleHelper.GetRoleName(user.Id) == "Administrator")
                {
                    <div class="col text-right">
                        <button type="button" class="btn btn-success" id="myNot" data-toggle="1">My Notifications</button>
                    </div>
                }
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table id="allNotifications" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>
                                From
                            </th>
                            @if (User.IsInRole("Admin"))
                            {
                                <th>
                                    To
                                </th>
                            }
                            <th>
                                @Html.DisplayNameFor(model => model.TicketId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.NotificationBody)
                            </th>
                            <th>
                                Created
                            </th>
                            <th>
                                Notification Read
                            </th>
                            <th></th>
                    </thead>
                    <tbody>
                        @if (User.IsInRole("Admin"))
                        {
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Sender.FullName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Recipient.FullName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TicketId)
                                    </td>
                                    <td>
                                        @Html.Raw(item.NotificationBody)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => item.Created)
                                    </td>
                                    <td>
                                        @if (item.IsRead == true)
                                        {
                                            <span class="badge badge-pill badge-success">Read</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-pill badge-danger">Not Read</span>
                                        }
                                    </td>
                                    <td>
                                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            foreach (var item in Model.Where(u => u.RecipientId == user.Id))
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Sender.FullName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TicketId)
                                    </td>
                                    <td>
                                        @Html.Raw(item.NotificationBody)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => item.Created)
                                    </td>
                                    <td>
                                        @if (item.IsRead == true)
                                        {
                                            <span class="badge badge-pill badge-success">Read</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-pill badge-danger">Not Read</span>
                                        }
                                    </td>
                                    <td>
                                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>



@section scripts{
    <script src="~/assets/extra-libs/DataTables/datatables.min.js"></script>
    <script src="~/Scripts/js/custom.js"></script>

    <script>
        $('#myNotifications').DataTable(
        {
            "lengthMenu": [ 5, 10, 20, 30, 50 ]
            });

        $('#allNotifications').DataTable(
        {
            "lengthMenu": [ 5, 10, 20, 30, 50 ]
        });
    </script>

}
