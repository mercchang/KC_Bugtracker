@model KC_Bugtracker.Models.Ticket
@using KC_Bugtracker.Models
@using KC_Bugtracker.Helpers
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Details";
}

@{
    var db = new ApplicationDbContext();
    var user = db.Users.Find(User.Identity.GetUserId());
}


<div class="card">
    <div class="card-body">
        <h4>Ticket</h4>
        <hr />
        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Assigned Developer</th>
                        <th>Project</th>
                        <th>Submitter</th>
                        <th>Priority</th>
                        <th>Status</th>
                        <th>Type</th>
                        <th>@Html.DisplayNameFor(model => model.Title)</th>
                        <th>@Html.DisplayNameFor(model => model.Description)</th>
                        <th>@Html.DisplayNameFor(model => model.Created)</th>
                        <th>@Html.DisplayNameFor(model => model.Updated)</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @if (Model.DeveloperId != null)
                            {
                                <span>@Html.DisplayFor(model => model.Developer.LastName), @Html.DisplayFor(model => model.Developer.FirstName)</span>
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.Project.Name)
                        </td>
                        <td>
                            @if (Model.SubmitterId != null)
                            {
                                <span>@Html.DisplayFor(model => model.Submitter.LastName), @Html.DisplayFor(model => model.Submitter.FirstName)</span>
                            }
                        </td>
                        <td>
                            @if (Model.TicketPriority.PriorityName.Contains("High"))
                            {
                                <span class="badge badge-danger">@Html.DisplayFor(model => model.TicketPriority.PriorityName)</span>
                            }
                            @if (Model.TicketPriority.PriorityName.Contains("Medium"))
                            {
                                <span class="badge badge-warning">@Html.DisplayFor(model => model.TicketPriority.PriorityName)</span>
                            }
                            @if (Model.TicketPriority.PriorityName.Contains("Low"))
                            {
                                <span class="badge badge-info">@Html.DisplayFor(model => model.TicketPriority.PriorityName)</span>
                            }
                            @if (Model.TicketPriority.PriorityName.Contains("None"))
                            {
                                <span class="badge badge-light">@Html.DisplayFor(model => model.TicketPriority.PriorityName)</span>
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.TicketStatus.StatusName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.TicketType.TypeName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.Created)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.Updated)
                        </td>
                        <td>
                            <div class="row">@Html.ActionLink("Edit", "Edit", new { id = Model.Id })</div>
                            <div class="row">@Html.ActionLink("Back to List", "Index")</div>
                        </td>
                    </tr>
                </tbody>
            </table>

        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-body">
                <h4>Attachments (@Model.TicketAttachments.Count)</h4>
                @if (Model.TicketAttachments.Count != 0)
                {
                    <table class="table">
                        <tr>
                            <th>
                                Submitter
                            </th>
                            <th>
                                
                            </th>
                            <th>
                                Attachment
                            </th>
                            <th>
                                Description
                            </th>
                            <th>
                                Uploaded
                            </th>
                        </tr>

                        @foreach (var attachment in Model.TicketAttachments.OrderBy(c => c.Created))
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => attachment.User.FirstName)
                                </td>
                                <td>
                                    <a href="@attachment.FilePath">
                                        <img src="@AttachmentHelper.GetIcon(attachment.FilePath)" style="width: 30px;" />
                                    </a>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => attachment.FilePath)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => attachment.Description)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => attachment.Created)
                                </td>
                            </tr>
                        }
                    </table>
                }
                else
                {
                    <p>No Attachments.</p>
                }

                <hr />
                @using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "Multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("TicketId", Model.Id)

                    <div class="form-group">
                        @Html.TextBox("file", null, new { type = "file" })
                    </div>

                    <div class="form-group">
                        <div>
                            @Html.TextArea("Description", "", new { @class = "form-control", rows = 5, placeholder = "Enter Description..." })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
                <h4>Comments (@Model.TicketComments.Count)</h4>
                <hr />
                @if (Model.TicketAttachments.Count != 0)
                {
                    <div class="chat-box scrollable" style="height:475px;">
                        <ul class="chat-list">
                            @foreach (var comment in Model.TicketComments.OrderBy(c => c.Created))
                            {
                                if (comment.User.Id == user.Id)
                                {
                                    <li class="odd chat-item">
                                        <div class="col">
                                            <div class="chat-content">
                                                <div class="box bg-light-inverse">@comment.Comment</div>
                                                <div class="chat-img">
                                                    @if (user.AvatarPath != null)
                                                    {
                                                        <img src="@user.AvatarPath" alt="user">
                                                    }
                                                    else
                                                    {
                                                        <img src="~/Avatars/default_user.png" alt="user">
                                                    }
                                                </div>
                                            </div>
                                            <div class="chat-content">
                                                <div class="chat-time pr-5">@comment.Created</div>
                                            </div>
                                        </div>
                                    </li>
                                }
                                else
                                {
                                    <li class="chat-item">
                                        <div class="chat-img">
                                            @if (comment.User.AvatarPath != null)
                                            {
                                                <img src="@comment.User.AvatarPath" alt="user">
                                            }
                                            else
                                            {
                                                <img src="~/Avatars/default_user.png" alt="user">
                                            }
                                        </div>
                                        <div class="chat-content">
                                            <h6 class="font-medium"><span>@comment.User.FirstName @comment.User.LastName</span></h6>
                                            <div class="box bg-light-info">@comment.Comment</div>
                                        </div>
                                        <div class="chat-time">@comment.Created</div>
                                    </li>
                                }
                            }

                        </ul>
                    </div>
                }
                else
                {
                    <p>No Comments.</p>
                }

                <div class="form-group pt-3">
                    <hr />
                    @using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
                    {
                        <div class="col-md-12">
                            @Html.AntiForgeryToken()
                            @Html.Hidden("TicketId", Model.Id)
                            
                            @Html.TextArea("Comment", new { @class = "form-control", rows = 5, placeholder = "Add Comment...", })
                        </div>
                        <div class="col pt-3">
                            <button type="submit" class="btn btn-info margin-5">Add Comment</button>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>
